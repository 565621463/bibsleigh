{
	"name": "FP",
	"tagged": [["functional", 240],
		["programming", 131],
		["named", 102],
		["source code", 85],
		["lisp", 84],
		["haskell", 79],
		["implementation", 72],
		["parallel", 71],
		["performance", 66],
		["compilation", 61],
		["lazy evaluation", 59],
		["type system", 51],
		["semantics", 50],
		["ml", 49],
		["higher-order", 43],
		["recursion", 40],
		["polymorphism", 39],
		["multi", 35],
		["case study", 33],
		["concurrent", 32],
		["composition", 31],
		["garbage collection", 30],
		["monad", 29],
		["proving", 29],
		["morphism", 27],
		["programming language", 26],
		["type inference", 26],
		["continuation", 26],
		["reduction", 26],
		["optimisation", 24],
		["data type", 24],
		["graph", 23],
		["automation", 22],
		["combinator", 22],
		["strict", 22],
		["evaluation", 21],
		["system f", 21],
		["design", 21],
		["logic", 21],
		["calculus", 20],
		["Î»-calculus", 19],
		["verification", 19],
		["distributed", 19],
		["framework", 18],
		["embedded", 18],
		["algebra", 17],
		["modelling", 16],
		["metaprogramming", 16],
		["dependent type", 16],
		["data flow", 15],
		["architecture", 15],
		["standard", 15],
		["domain-specific language", 15],
		["algorithm", 15],
		["abstraction", 14],
		["parsing", 14],
		["reasoning", 14],
		["testing", 14],
		["pattern matching", 14],
		["thread", 14],
		["user interface", 13],
		["contract", 12],
		["erlang", 12],
		["automaton", 12],
		["towards", 12],
		["syntax", 12],
		["formal method", 12],
		["execution", 12],
		["generative", 11],
		["object-oriented", 11],
		["library", 11],
		["debugging", 11],
		["hardware", 11],
		["memory management", 11],
		["effectiveness", 11],
		["complexity", 10],
		["imperative", 10],
		["nondeterminism", 10],
		["behaviour", 10],
		["specification", 10],
		["question", 10],
		["fault", 10],
		["xml", 9],
		["tool support", 9],
		["development", 9],
		["scalability", 9],
		["how", 9],
		["process", 9],
		["unification", 8],
		["profiling", 8],
		["correctness", 8],
		["synthesis", 8],
		["query", 8],
		["bidirectional", 8],
		["partial evaluation", 8],
		["linear", 8],
		["virtual machine", 7],
		["control flow", 7],
		["declarative", 7],
		["logic programming", 7],
		["type safety", 7],
		["network", 7],
		["visual notation", 7],
		["runtime", 7],
		["incremental", 7],
		["c", 7],
		["self", 7],
		["program transformation", 6],
		["fixpoint", 6],
		["abstract interpretation", 6],
		["java", 6],
		["code generation", 6],
		["constraints", 6],
		["call-by", 6],
		["realtime", 6],
		["prolog", 5],
		["refinement", 5],
		["normalisation", 5],
		["clustering", 5],
		["education", 5],
		["category theory", 5],
		["aspect-oriented", 5],
		["static analysis", 5],
		["deforestation", 5],
		["tutorial", 5],
		["regular expression", 5],
		["re-engineering", 5],
		["termination", 5],
		["attribute grammar", 5],
		["lenses", 5],
		["induction", 5],
		["quickcheck", 5],
		["revisited", 4],
		["difference", 4],
		["game studies", 4],
		["coordination", 4],
		["lightweight", 4],
		["exclamation", 4],
		["adaptation", 4],
		["interface", 4],
		["assembly", 4],
		["geometry", 4],
		["dependence", 4],
		["backtracking", 4],
		["benchmark", 4],
		["kernel", 4],
		["theorem proving", 4],
		["comprehension", 4],
		["database", 4],
		["exception", 4],
		["similarity", 4],
		["refactoring", 4],
		["type checking", 4],
		["paradigm", 4],
		["for free", 4],
		["staged", 4],
		["mobile", 4],
		["encoding", 4],
		["hoare", 4],
		["operating system", 4],
		["c++", 4],
		["relational", 4],
		["mixin", 4],
		["first-order", 4],
		["metric", 4],
		["javascript", 3],
		["dynamic typing", 3],
		["validation", 3],
		["pointer", 3],
		["python", 3],
		["industrial", 3],
		["agile", 3],
		["f#", 3],
		["program analysis", 3],
		["static typing", 3],
		["coq", 3],
		["detection", 3],
		["locality", 2],
		["petri net", 2],
		["comparative", 2],
		["assurance", 2],
		["string", 2],
		["model checking", 2],
		["scheduling", 2],
		["persistent", 2],
		["prototype", 2],
		["migration", 2],
		["emacs", 2],
		["sorting", 2],
		["open source", 2],
		["context-free grammar", 2],
		["perspective", 2],
		["probability", 2],
		["design pattern", 2],
		["random testing", 2],
		["canonical", 2],
		["pipes and filters", 2],
		["policy", 2],
		["linux", 2],
		["precise", 2],
		["scrap your boilerplate", 2],
		["spreadsheet", 2],
		["hybrid", 2],
		["xquery", 2],
		["interpreter", 2],
		["theory and practice", 2],
		["component", 2],
		["smt", 2],
		["evolution", 2]],
	"title": "Functional Programming"
}