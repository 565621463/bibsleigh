{
	"name": "FPCA",
	"select": "FPCA",
	"tagged": [["functional", 42],
		["parallel", 19],
		["source code", 16],
		["analysis", 14],
		["lazy evaluation", 14],
		["polymorphism", 13],
		["strict", 13],
		["architecture", 12],
		["programming", 12],
		["implementation", 11],
		["named", 11],
		["performance", 10],
		["compilation", 7],
		["data flow", 7],
		["morphism", 7],
		["reduction", 7],
		["garbage collection", 6],
		["ml", 6],
		["multi", 6],
		["recursion", 6],
		["semantics", 6],
		["type inference", 6],
		["combinator", 5],
		["evaluation", 5],
		["graph", 5],
		["using", 5],
		["automaton", 4],
		["higher-order", 4],
		["logic", 4],
		["abstract interpretation", 3],
		["algorithm", 3],
		["approach", 3],
		["array", 3],
		["complexity", 3],
		["hardware", 3],
		["haskell", 3],
		["pattern matching", 3],
		["set", 3],
		["specification", 3],
		["thread", 3],
		["type system", 3],
		["automation", 2],
		["behaviour", 2],
		["benchmark", 2],
		["category theory", 2],
		["clustering", 2],
		["composition", 2],
		["constraints", 2],
		["deforestation", 2],
		["detection", 2],
		["distributed", 2],
		["embedded", 2],
		["exception", 2],
		["generative", 2],
		["how", 2],
		["logic programming", 2],
		["metric", 2],
		["nondeterminism", 2],
		["object-oriented", 2],
		["optimisation", 2],
		["partial evaluation", 2],
		["proving", 2],
		["question", 2],
		["realtime", 2],
		["representation", 2],
		["unification", 2],
		["user interface", 2]],
	"title": "Functional Programming and Computer Architecture",
	"vocabulary": ["abstract", 13, "aggreg", 3, "algorithm", 3, "analysi", 15, "applic", 7, "approach", 3, "architectur", 12, "array", 3, "base", 3, "calculus", 3, "class", 4, "code", 3, "collect", 5, "combin", 4, "compil", 12, "complex", 3, "comput", 3, "construct", 3, "control", 4, "data", 6, "dataflow", 4, "dynam", 3, "effici", 9, "environ", 3, "evalu", 12, "extend", 5, "fast", 3, "finit", 3, "first", 3, "function", 51, "garbag", 6, "generat", 4, "grammar", 3, "graph", 6, "hardwar", 3, "haskel", 3, "higher", 4, "implement", 11, "improv", 3, "infer", 7, "interpret", 4, "lambda", 3, "languag", 36, "lazi", 14, "list", 3, "logic", 6, "machin", 17, "match", 3, "ml", 7, "model", 4, "multi", 3, "new", 3, "non", 8, "optim", 5, "order", 9, "overload", 5, "parallel", 20, "partial", 4, "pattern", 3, "perform", 3, "polymorph", 13, "process", 3, "program", 34, "project", 3, "real", 3, "recurs", 6, "reduct", 8, "relat", 3, "represent", 3, "scheme", 3, "semant", 6, "set", 4, "share", 4, "simpl", 3, "space", 3, "specif", 3, "strict", 13, "system", 5, "theori", 3, "time", 7, "transform", 4, "type", 19, "updat", 3, "use", 6]
}