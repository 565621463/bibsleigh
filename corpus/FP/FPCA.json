{
	"name": "FPCA",
	"select": "FPCA",
	"tagged": [["functional", 42],
		["parallel", 19],
		["source code", 16],
		["lazy evaluation", 14],
		["polymorphism", 13],
		["strict", 13],
		["architecture", 12],
		["programming", 12],
		["named", 11],
		["implementation", 11],
		["performance", 10],
		["data flow", 7],
		["compilation", 7],
		["morphism", 7],
		["reduction", 7],
		["type inference", 6],
		["semantics", 6],
		["multi", 6],
		["garbage collection", 6],
		["recursion", 6],
		["ml", 6],
		["evaluation", 5],
		["graph", 5],
		["combinator", 5],
		["higher-order", 4],
		["logic", 4],
		["automaton", 4],
		["complexity", 3],
		["type system", 3],
		["hardware", 3],
		["abstract interpretation", 3],
		["algorithm", 3],
		["specification", 3],
		["pattern matching", 3],
		["haskell", 3],
		["thread", 3],
		["user interface", 2],
		["question", 2],
		["constraints", 2],
		["unification", 2],
		["benchmark", 2],
		["generative", 2],
		["partial evaluation", 2],
		["object-oriented", 2],
		["nondeterminism", 2],
		["behaviour", 2],
		["distributed", 2],
		["embedded", 2],
		["logic programming", 2],
		["composition", 2],
		["clustering", 2],
		["proving", 2],
		["exception", 2],
		["optimisation", 2],
		["automation", 2],
		["realtime", 2],
		["detection", 2],
		["metric", 2],
		["how", 2],
		["deforestation", 2],
		["category theory", 2]],
	"title": "Functional Programming and Computer Architecture"
}